
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default Deny: By default, nobody can read or write anything.
    match /{document=**} {
      allow read, write: if false;
    }

    // Teachers Collection:
    // - Authenticated users can read the teachers collection to check their own role.
    // - All write operations (create, update, delete) must go through secure server-side logic (Cloud Functions).
    match /teachers/{userId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // Classes, Subjects, Terms, Exams, Settings Collections:
    // - These are managed by the D.O.S. portal.
    // - Authenticated users (who must have a role) can read this data.
    // - Writes must be handled by secure server-side logic.
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
    match /subjects/{subjectId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
    match /terms/{termId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
     match /exams/{examId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
    match /settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if false;
    }
     match /gradingPolicies/{policyId} {
        allow read: if request.auth != null;
        allow write: if false;
    }

    // Students Collection:
    // - Authenticated users with a role can read student data.
    // - Writes must be handled by secure server-side logic.
    match /students/{studentId} {
       allow read: if request.auth != null;
       allow write: if false;
    }

    // Mark Submissions Collection:
    // - Teachers can create new submissions.
    // - Teachers can only read submissions they have created.
    // - D.O.S. can read all submissions.
    // - Updates/deletes must be handled by secure server-side logic.
    match /markSubmissions/{submissionId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (resource.data.teacherId == request.auth.uid || get(/databases/$(database)/documents/teachers/$(request.auth.uid)).data.role == 'dos');
      allow update, delete: if false;
    }
    
    // Attendance Collection
    match /attendance/{attendanceId} {
      allow read, write: if request.auth != null;
    }
    
    // Website Content Collection
    match /website_content/{contentId} {
        allow read: if true; // Publicly readable
        allow write: if false; // Writes must be from a secure server environment
    }
  }
}
