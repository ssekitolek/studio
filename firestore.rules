
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default Deny: Nobody can read or write anything by default.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Website Content: Publicly readable, only writable by admin.
    match /website_content/homepage {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }
    
    // Teachers:
    // - Authenticated users can read their own document to get their role.
    // - Admins/DOS can list/read all teachers.
    // - Admins/DOS can write (create, update, delete) teacher documents.
    match /teachers/{teacherId} {
      allow read: if request.auth.uid == teacherId || request.auth.token.role in ['admin', 'dos'];
      allow list: if request.auth.token.role in ['admin', 'dos'];
      allow write: if request.auth.token.role in ['admin', 'dos'];
    }
    
    // Classes, Subjects, Terms, Exams:
    // Readable by any authenticated user (teacher, dos, admin).
    // Writable only by Admin/DOS.
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role in ['admin', 'dos'];
    }
    match /subjects/{subjectId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role in ['admin', 'dos'];
    }
    match /terms/{termId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role in ['admin', 'dos'];
    }
     match /exams/{examId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role in ['admin', 'dos'];
    }
    
    // Students:
    // - Writable only by Admin/DOS.
    // - Readable by Admin/DOS.
    // - Teachers can read students if they are assigned to the student's class.
    //   (This rule can be refined for performance if needed).
    match /students/{studentId} {
      allow read: if request.auth.token.role in ['admin', 'dos']
                  || get(/databases/$(database)/documents/classes/$(resource.data.classId)).data.classTeacherId == request.auth.uid;
      allow list: if request.auth.token.role in ['admin', 'dos'];
      allow write: if request.auth.token.role in ['admin', 'dos'];
    }

    // Mark Submissions:
    // - Teachers can create new submissions.
    // - Teachers can read submissions they created.
    // - Admin/DOS can read all submissions.
    // - Admin/DOS can update submissions (for approval/rejection).
    match /markSubmissions/{submissionId} {
      allow create: if request.auth.uid == request.resource.data.teacherId;
      allow read: if request.auth.token.role in ['admin', 'dos'] || resource.data.teacherId == request.auth.uid;
      allow update: if request.auth.token.role in ['admin', 'dos'];
    }

    // Attendance Records
    // - Teachers can write attendance for classes they teach.
    // - Admin/DOS can read all attendance.
    match /attendance/{attendanceId} {
       allow read: if request.auth.token.role in ['admin', 'dos'] 
                   || request.auth.uid == resource.data.teacherId;
       allow write: if request.auth.uid == request.resource.data.teacherId;
    }
    
    // Grading Policies and General Settings:
    // Writable only by Admin/DOS, readable by any authenticated user.
    match /gradingPolicies/{policyId} {
        allow read: if request.auth != null;
        allow write: if request.auth.token.role in ['admin', 'dos'];
    }
    match /settings/general {
        allow read: if request.auth != null;
        allow write: if request.auth.token.role in ['admin', 'dos'];
    }
  }
}
