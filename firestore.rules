
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated and has a specific role.
    // It checks the /teachers collection where roles are stored.
    function isSignedIn() {
      return request.auth != null;
    }
    
    function getUserData(userId) {
      return get(/databases/$(database)/documents/teachers/$(userId)).data;
    }
    
    function isRole(role) {
      return isSignedIn() && getUserData(request.auth.uid).role == role;
    }
    
    function isAdmin() {
      return isRole('admin');
    }
    
    function isDos() {
      return isRole('dos');
    }

    function isTeacher() {
      return isRole('teacher');
    }

    // Publicly readable content for the marketing website.
    // Only admins should be able to write to it from the admin dashboard.
    match /website_content/{contentId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Teachers collection holds user roles.
    // D.O.S. and Admins can manage these records.
    // Individual teachers can read their own record.
    match /teachers/{teacherId} {
      allow read: if isDos() || isAdmin() || (isTeacher() && request.auth.uid == teacherId);
      allow list: if isDos() || isAdmin();
      allow write: if isDos() || isAdmin();
    }
    
    // Classes, Subjects, and Terms are managed by D.O.S.
    // but need to be readable by authenticated teachers for their dashboards.
    match /classes/{classId} {
      allow read: if isDos() || isAdmin() || isTeacher();
      allow write: if isDos() || isAdmin();
    }
    
    match /subjects/{subjectId} {
      allow read: if isDos() || isAdmin() || isTeacher();
      allow write: if isDos() || isAdmin();
    }
    
    match /terms/{termId} {
      allow read: if isDos() || isAdmin() || isTeacher();
      allow write: if isDos() || isAdmin();
    }
    
    // Exams are managed by D.O.S.
    // Readable by teachers to know which assessments to submit for.
    match /exams/{examId} {
        allow read: if isDos() || isAdmin() || isTeacher();
        allow write: if isDos() || isAdmin();
    }

    // Students are managed by D.O.S.
    // Readable by teachers.
    match /students/{studentId} {
        allow read: if isDos() || isAdmin() || isTeacher();
        allow write: if isDos() || isAdmin();
    }
    
    // Mark submissions can be created by teachers.
    // They are primarily read and updated (approved/rejected) by the D.O.S.
    match /markSubmissions/{submissionId} {
        allow read: if isDos() || isAdmin() || isTeacher();
        allow create: if isTeacher();
        allow update, delete: if isDos() || isAdmin();
    }
    
    // Attendance records are created by teachers.
    // They are read by the D.O.S. for summary reports.
    match /attendance/{attendanceId} {
      allow read: if isDos() || isAdmin() || isTeacher();
      allow write: if isTeacher();
    }

    // General settings are only managed by the D.O.S.
    // They are readable by teachers for dashboard info (e.g., announcements).
    match /settings/general {
        allow read: if isDos() || isAdmin() || isTeacher();
        allow write: if isDos() || isAdmin();
    }
    
    // Grading policies are managed by D.O.S.
    // They are readable by teachers to understand grading scales.
    match /gradingPolicies/{policyId} {
        allow read: if isDos() || isAdmin() || isTeacher();
        allow write: if isDos() || isAdmin();
    }
  }
}
